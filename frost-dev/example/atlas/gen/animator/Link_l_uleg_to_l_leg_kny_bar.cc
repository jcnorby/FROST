/*
 * Automatically Generated from Mathematica.
 * Wed 27 Dec 2017 22:39:01 GMT-06:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;


#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t3877;
  double t12339;
  double t12672;
  double t15420;
  double t16171;
  double t13619;
  double t13700;
  double t16427;
  double t17156;
  double t17256;
  double t17446;
  double t17852;
  double t18012;
  double t18076;
  double t18185;
  double t18244;
  double t18364;
  double t19635;
  double t19968;
  double t19988;
  double t13358;
  double t15345;
  double t15460;
  double t16074;
  double t16264;
  double t16490;
  double t16951;
  double t17820;
  double t17886;
  double t17975;
  double t17982;
  double t18159;
  double t18375;
  double t18413;
  double t18450;
  double t18766;
  double t19026;
  double t19054;
  double t19415;
  double t19992;
  double t20003;
  double t20012;
  double t20025;
  double t20058;
  double t20100;
  double t20123;
  double t18837;
  double t20034;
  double t20155;
  double t20170;
  double t24594;
  double t24731;
  double t24722;
  double t24744;
  double t24773;
  double t24797;
  double t24930;
  double t24932;
  double t25000;
  double t25008;
  double t25079;
  double t25837;
  double t25838;
  double t25855;
  double t26017;
  double t26020;
  double t26023;
  double t24622;
  double t24776;
  double t24996;
  double t25835;
  double t25906;
  double t25927;
  double t25986;
  double t25996;
  double t26064;
  double t26068;
  double t26102;
  double t26169;
  double t26450;
  double t26453;
  double t26541;
  double t26016;
  double t26447;
  double t26559;
  double t26640;
  double t32669;
  double t32672;
  double t32679;
  double t32697;
  double t32698;
  double t32699;
  double t32723;
  double t32727;
  double t32732;
  double t32734;
  double t32737;
  double t32766;
  double t32863;
  double t32868;
  double t32897;
  double t32666;
  double t32686;
  double t32712;
  double t32733;
  double t32826;
  double t32836;
  double t32841;
  double t32861;
  double t32900;
  double t32904;
  double t32906;
  double t32936;
  double t32950;
  double t32952;
  double t32953;
  double t32862;
  double t32937;
  double t32956;
  double t32962;
  double t20189;
  double t20209;
  double t20216;
  double t20224;
  double t20241;
  double t20262;
  double t20284;
  double t20313;
  double t20356;
  double t21084;
  double t21269;
  double t21574;
  double t22858;
  double t23123;
  double t24125;
  double t24348;
  double t24374;
  double t24388;
  double t33291;
  double t33292;
  double t33293;
  double t26641;
  double t26672;
  double t26842;
  double t27576;
  double t29639;
  double t30927;
  double t31197;
  double t31565;
  double t31595;
  double t31649;
  double t31682;
  double t31952;
  double t32094;
  double t32151;
  double t32461;
  double t32490;
  double t32527;
  double t32636;
  double t33475;
  double t33476;
  double t33478;
  double t32963;
  double t32969;
  double t32982;
  double t32998;
  double t33044;
  double t33065;
  double t33087;
  double t33097;
  double t33123;
  double t33140;
  double t33149;
  double t33161;
  double t33177;
  double t33206;
  double t33242;
  double t33249;
  double t33256;
  double t33265;
  double t33587;
  double t33588;
  double t33590;
  t3877 = Cos(var1[4]);
  t12339 = Cos(var1[5]);
  t12672 = Sin(var1[13]);
  t15420 = Cos(var1[13]);
  t16171 = Sin(var1[5]);
  t13619 = Sin(var1[11]);
  t13700 = Sin(var1[4]);
  t16427 = Cos(var1[11]);
  t17156 = -1.*t3877*t12339*t12672;
  t17256 = -1.*t15420*t3877*t16171;
  t17446 = t17156 + t17256;
  t17852 = Cos(var1[12]);
  t18012 = Sin(var1[12]);
  t18076 = 0.05*t18012;
  t18185 = t15420*t3877*t12339;
  t18244 = -1.*t3877*t12672*t16171;
  t18364 = t18185 + t18244;
  t19635 = t16427*t13700;
  t19968 = -1.*t13619*t17446;
  t19988 = t19635 + t19968;
  t13358 = 0.089*t3877*t12339*t12672;
  t15345 = -0.089*t13619*t13700;
  t15460 = -1.*t15420;
  t16074 = 1. + t15460;
  t16264 = -0.089*t16074*t3877*t16171;
  t16490 = -1.*t16427;
  t16951 = 1. + t16490;
  t17820 = 0.089*t16951*t17446;
  t17886 = -1.*t17852;
  t17975 = 1. + t17886;
  t17982 = 0.05*t17975;
  t18159 = t17982 + t18076;
  t18375 = t18159*t18364;
  t18413 = t13619*t13700;
  t18450 = t16427*t17446;
  t18766 = t18413 + t18450;
  t19026 = -1. + t17852;
  t19054 = 0.05*t19026;
  t19415 = t19054 + t18076;
  t19992 = t19415*t19988;
  t20003 = t18012*t18364;
  t20012 = t17852*t19988;
  t20025 = t20003 + t20012;
  t20058 = t17852*t18364;
  t20100 = -1.*t18012*t19988;
  t20123 = t20058 + t20100;
  t18837 = 0.101128*t18766;
  t20034 = -0.05117*t20025;
  t20155 = 0.058749*t20123;
  t20170 = var1[0] + t13358 + t15345 + t16264 + t17820 + t18375 + t18837 + t19992 + t20034 + t20155;
  t24594 = Sin(var1[3]);
  t24731 = Cos(var1[3]);
  t24722 = t12339*t24594*t13700;
  t24744 = t24731*t16171;
  t24773 = t24722 + t24744;
  t24797 = t24731*t12339;
  t24930 = -1.*t24594*t13700*t16171;
  t24932 = t24797 + t24930;
  t25000 = -1.*t12672*t24773;
  t25008 = t15420*t24932;
  t25079 = t25000 + t25008;
  t25837 = t15420*t24773;
  t25838 = t12672*t24932;
  t25855 = t25837 + t25838;
  t26017 = -1.*t16427*t3877*t24594;
  t26020 = -1.*t13619*t25079;
  t26023 = t26017 + t26020;
  t24622 = 0.089*t3877*t13619*t24594;
  t24776 = 0.089*t12672*t24773;
  t24996 = 0.089*t16074*t24932;
  t25835 = 0.089*t16951*t25079;
  t25906 = t18159*t25855;
  t25927 = -1.*t3877*t13619*t24594;
  t25986 = t16427*t25079;
  t25996 = t25927 + t25986;
  t26064 = t19415*t26023;
  t26068 = t18012*t25855;
  t26102 = t17852*t26023;
  t26169 = t26068 + t26102;
  t26450 = t17852*t25855;
  t26453 = -1.*t18012*t26023;
  t26541 = t26450 + t26453;
  t26016 = 0.101128*t25996;
  t26447 = -0.05117*t26169;
  t26559 = 0.058749*t26541;
  t26640 = var1[1] + t24622 + t24776 + t24996 + t25835 + t25906 + t26016 + t26064 + t26447 + t26559;
  t32669 = -1.*t24731*t12339*t13700;
  t32672 = t24594*t16171;
  t32679 = t32669 + t32672;
  t32697 = t12339*t24594;
  t32698 = t24731*t13700*t16171;
  t32699 = t32697 + t32698;
  t32723 = -1.*t12672*t32679;
  t32727 = t15420*t32699;
  t32732 = t32723 + t32727;
  t32734 = t15420*t32679;
  t32737 = t12672*t32699;
  t32766 = t32734 + t32737;
  t32863 = t16427*t24731*t3877;
  t32868 = -1.*t13619*t32732;
  t32897 = t32863 + t32868;
  t32666 = -0.089*t24731*t3877*t13619;
  t32686 = 0.089*t12672*t32679;
  t32712 = 0.089*t16074*t32699;
  t32733 = 0.089*t16951*t32732;
  t32826 = t18159*t32766;
  t32836 = t24731*t3877*t13619;
  t32841 = t16427*t32732;
  t32861 = t32836 + t32841;
  t32900 = t19415*t32897;
  t32904 = t18012*t32766;
  t32906 = t17852*t32897;
  t32936 = t32904 + t32906;
  t32950 = t17852*t32766;
  t32952 = -1.*t18012*t32897;
  t32953 = t32950 + t32952;
  t32862 = 0.101128*t32861;
  t32937 = -0.05117*t32936;
  t32956 = 0.058749*t32953;
  t32962 = var1[2] + t32666 + t32686 + t32712 + t32733 + t32826 + t32862 + t32900 + t32937 + t32956;
  t20189 = 0.097605*t18766;
  t20209 = 0.093149*t18766;
  t20216 = 0.088244*t18766;
  t20224 = 0.08342*t18766;
  t20241 = 0.079202*t18766;
  t20262 = 0.076045*t18766;
  t20284 = 0.074292*t18766;
  t20313 = 0.074133*t18766;
  t20356 = 0.075585*t18766;
  t21084 = 0.07849*t18766;
  t21269 = 0.082535*t18766;
  t21574 = 0.08728*t18766;
  t22858 = 0.092212*t18766;
  t23123 = 0.096795*t18766;
  t24125 = 0.100534*t18766;
  t24348 = 0.103023*t18766;
  t24374 = 0.103992*t18766;
  t24388 = 0.103337*t18766;
  t33291 = -0.42517*t20025;
  t33292 = 0.008749*t20123;
  t33293 = var1[0] + t13358 + t15345 + t16264 + t17820 + t18375 + t18837 + t19992 + t33291 + t33292;
  t26641 = 0.097605*t25996;
  t26672 = 0.093149*t25996;
  t26842 = 0.088244*t25996;
  t27576 = 0.08342*t25996;
  t29639 = 0.079202*t25996;
  t30927 = 0.076045*t25996;
  t31197 = 0.074292*t25996;
  t31565 = 0.074133*t25996;
  t31595 = 0.075585*t25996;
  t31649 = 0.07849*t25996;
  t31682 = 0.082535*t25996;
  t31952 = 0.08728*t25996;
  t32094 = 0.092212*t25996;
  t32151 = 0.096795*t25996;
  t32461 = 0.100534*t25996;
  t32490 = 0.103023*t25996;
  t32527 = 0.103992*t25996;
  t32636 = 0.103337*t25996;
  t33475 = -0.42517*t26169;
  t33476 = 0.008749*t26541;
  t33478 = var1[1] + t24622 + t24776 + t24996 + t25835 + t25906 + t26016 + t26064 + t33475 + t33476;
  t32963 = 0.097605*t32861;
  t32969 = 0.093149*t32861;
  t32982 = 0.088244*t32861;
  t32998 = 0.08342*t32861;
  t33044 = 0.079202*t32861;
  t33065 = 0.076045*t32861;
  t33087 = 0.074292*t32861;
  t33097 = 0.074133*t32861;
  t33123 = 0.075585*t32861;
  t33140 = 0.07849*t32861;
  t33149 = 0.082535*t32861;
  t33161 = 0.08728*t32861;
  t33177 = 0.092212*t32861;
  t33206 = 0.096795*t32861;
  t33242 = 0.100534*t32861;
  t33249 = 0.103023*t32861;
  t33256 = 0.103992*t32861;
  t33265 = 0.103337*t32861;
  t33587 = -0.42517*t32936;
  t33588 = 0.008749*t32953;
  t33590 = var1[2] + t32666 + t32686 + t32712 + t32733 + t32826 + t32862 + t32900 + t33587 + t33588;
  p_output1[0]=t20170;
  p_output1[1]=t13358 + t15345 + t16264 + t17820 + t18375 + t19992 - 0.051628*t20025 + 0.062178*t20123 + t20189 + var1[0];
  p_output1[2]=t13358 + t15345 + t16264 + t17820 + t18375 + t19992 - 0.05191*t20025 + 0.064288*t20123 + t20209 + var1[0];
  p_output1[3]=t13358 + t15345 + t16264 + t17820 + t18375 + t19992 - 0.051985*t20025 + 0.064849*t20123 + t20216 + var1[0];
  p_output1[4]=t13358 + t15345 + t16264 + t17820 + t18375 + t19992 - 0.051845*t20025 + 0.063801*t20123 + t20224 + var1[0];
  p_output1[5]=t13358 + t15345 + t16264 + t17820 + t18375 + t19992 - 0.051505*t20025 + 0.061257*t20123 + t20241 + var1[0];
  p_output1[6]=t13358 + t15345 + t16264 + t17820 + t18375 + t19992 - 0.051002*t20025 + 0.057494*t20123 + t20262 + var1[0];
  p_output1[7]=t13358 + t15345 + t16264 + t17820 + t18375 + t19992 - 0.05039*t20025 + 0.052919*t20123 + t20284 + var1[0];
  p_output1[8]=t13358 + t15345 + t16264 + t17820 + t18375 + t19992 - 0.049736*t20025 + 0.048027*t20123 + t20313 + var1[0];
  p_output1[9]=t13358 + t15345 + t16264 + t17820 + t18375 + t19992 - 0.049111*t20025 + 0.043349*t20123 + t20356 + var1[0];
  p_output1[10]=t13358 + t15345 + t16264 + t17820 + t18375 + t19992 - 0.048582*t20025 + 0.039392*t20123 + t21084 + var1[0];
  p_output1[11]=t13358 + t15345 + t16264 + t17820 + t18375 + t19992 - 0.048206*t20025 + 0.036584*t20123 + t21269 + var1[0];
  p_output1[12]=t13358 + t15345 + t16264 + t17820 + t18375 + t19992 - 0.048025*t20025 + 0.03523*t20123 + t21574 + var1[0];
  p_output1[13]=t13358 + t15345 + t16264 + t17820 + t18375 + t19992 - 0.048058*t20025 + 0.035477*t20123 + t22858 + var1[0];
  p_output1[14]=t13358 + t15345 + t16264 + t17820 + t18375 + t19992 - 0.048302*t20025 + 0.037298*t20123 + t23123 + var1[0];
  p_output1[15]=t13358 + t15345 + t16264 + t17820 + t18375 + t19992 - 0.048729*t20025 + 0.040495*t20123 + t24125 + var1[0];
  p_output1[16]=t13358 + t15345 + t16264 + t17820 + t18375 + t19992 - 0.049294*t20025 + 0.044722*t20123 + t24348 + var1[0];
  p_output1[17]=t13358 + t15345 + t16264 + t17820 + t18375 + t19992 - 0.049936*t20025 + 0.049521*t20123 + t24374 + var1[0];
  p_output1[18]=t13358 + t15345 + t16264 + t17820 + t18375 + t19992 - 0.050584*t20025 + 0.054372*t20123 + t24388 + var1[0];
  p_output1[19]=t20170;
  p_output1[20]=t26640;
  p_output1[21]=t24622 + t24776 + t24996 + t25835 + t25906 + t26064 - 0.051628*t26169 + 0.062178*t26541 + t26641 + var1[1];
  p_output1[22]=t24622 + t24776 + t24996 + t25835 + t25906 + t26064 - 0.05191*t26169 + 0.064288*t26541 + t26672 + var1[1];
  p_output1[23]=t24622 + t24776 + t24996 + t25835 + t25906 + t26064 - 0.051985*t26169 + 0.064849*t26541 + t26842 + var1[1];
  p_output1[24]=t24622 + t24776 + t24996 + t25835 + t25906 + t26064 - 0.051845*t26169 + 0.063801*t26541 + t27576 + var1[1];
  p_output1[25]=t24622 + t24776 + t24996 + t25835 + t25906 + t26064 - 0.051505*t26169 + 0.061257*t26541 + t29639 + var1[1];
  p_output1[26]=t24622 + t24776 + t24996 + t25835 + t25906 + t26064 - 0.051002*t26169 + 0.057494*t26541 + t30927 + var1[1];
  p_output1[27]=t24622 + t24776 + t24996 + t25835 + t25906 + t26064 - 0.05039*t26169 + 0.052919*t26541 + t31197 + var1[1];
  p_output1[28]=t24622 + t24776 + t24996 + t25835 + t25906 + t26064 - 0.049736*t26169 + 0.048027*t26541 + t31565 + var1[1];
  p_output1[29]=t24622 + t24776 + t24996 + t25835 + t25906 + t26064 - 0.049111*t26169 + 0.043349*t26541 + t31595 + var1[1];
  p_output1[30]=t24622 + t24776 + t24996 + t25835 + t25906 + t26064 - 0.048582*t26169 + 0.039392*t26541 + t31649 + var1[1];
  p_output1[31]=t24622 + t24776 + t24996 + t25835 + t25906 + t26064 - 0.048206*t26169 + 0.036584*t26541 + t31682 + var1[1];
  p_output1[32]=t24622 + t24776 + t24996 + t25835 + t25906 + t26064 - 0.048025*t26169 + 0.03523*t26541 + t31952 + var1[1];
  p_output1[33]=t24622 + t24776 + t24996 + t25835 + t25906 + t26064 - 0.048058*t26169 + 0.035477*t26541 + t32094 + var1[1];
  p_output1[34]=t24622 + t24776 + t24996 + t25835 + t25906 + t26064 - 0.048302*t26169 + 0.037298*t26541 + t32151 + var1[1];
  p_output1[35]=t24622 + t24776 + t24996 + t25835 + t25906 + t26064 - 0.048729*t26169 + 0.040495*t26541 + t32461 + var1[1];
  p_output1[36]=t24622 + t24776 + t24996 + t25835 + t25906 + t26064 - 0.049294*t26169 + 0.044722*t26541 + t32490 + var1[1];
  p_output1[37]=t24622 + t24776 + t24996 + t25835 + t25906 + t26064 - 0.049936*t26169 + 0.049521*t26541 + t32527 + var1[1];
  p_output1[38]=t24622 + t24776 + t24996 + t25835 + t25906 + t26064 - 0.050584*t26169 + 0.054372*t26541 + t32636 + var1[1];
  p_output1[39]=t26640;
  p_output1[40]=t32962;
  p_output1[41]=t32666 + t32686 + t32712 + t32733 + t32826 + t32900 - 0.051628*t32936 + 0.062178*t32953 + t32963 + var1[2];
  p_output1[42]=t32666 + t32686 + t32712 + t32733 + t32826 + t32900 - 0.05191*t32936 + 0.064288*t32953 + t32969 + var1[2];
  p_output1[43]=t32666 + t32686 + t32712 + t32733 + t32826 + t32900 - 0.051985*t32936 + 0.064849*t32953 + t32982 + var1[2];
  p_output1[44]=t32666 + t32686 + t32712 + t32733 + t32826 + t32900 - 0.051845*t32936 + 0.063801*t32953 + t32998 + var1[2];
  p_output1[45]=t32666 + t32686 + t32712 + t32733 + t32826 + t32900 - 0.051505*t32936 + 0.061257*t32953 + t33044 + var1[2];
  p_output1[46]=t32666 + t32686 + t32712 + t32733 + t32826 + t32900 - 0.051002*t32936 + 0.057494*t32953 + t33065 + var1[2];
  p_output1[47]=t32666 + t32686 + t32712 + t32733 + t32826 + t32900 - 0.05039*t32936 + 0.052919*t32953 + t33087 + var1[2];
  p_output1[48]=t32666 + t32686 + t32712 + t32733 + t32826 + t32900 - 0.049736*t32936 + 0.048027*t32953 + t33097 + var1[2];
  p_output1[49]=t32666 + t32686 + t32712 + t32733 + t32826 + t32900 - 0.049111*t32936 + 0.043349*t32953 + t33123 + var1[2];
  p_output1[50]=t32666 + t32686 + t32712 + t32733 + t32826 + t32900 - 0.048582*t32936 + 0.039392*t32953 + t33140 + var1[2];
  p_output1[51]=t32666 + t32686 + t32712 + t32733 + t32826 + t32900 - 0.048206*t32936 + 0.036584*t32953 + t33149 + var1[2];
  p_output1[52]=t32666 + t32686 + t32712 + t32733 + t32826 + t32900 - 0.048025*t32936 + 0.03523*t32953 + t33161 + var1[2];
  p_output1[53]=t32666 + t32686 + t32712 + t32733 + t32826 + t32900 - 0.048058*t32936 + 0.035477*t32953 + t33177 + var1[2];
  p_output1[54]=t32666 + t32686 + t32712 + t32733 + t32826 + t32900 - 0.048302*t32936 + 0.037298*t32953 + t33206 + var1[2];
  p_output1[55]=t32666 + t32686 + t32712 + t32733 + t32826 + t32900 - 0.048729*t32936 + 0.040495*t32953 + t33242 + var1[2];
  p_output1[56]=t32666 + t32686 + t32712 + t32733 + t32826 + t32900 - 0.049294*t32936 + 0.044722*t32953 + t33249 + var1[2];
  p_output1[57]=t32666 + t32686 + t32712 + t32733 + t32826 + t32900 - 0.049936*t32936 + 0.049521*t32953 + t33256 + var1[2];
  p_output1[58]=t32666 + t32686 + t32712 + t32733 + t32826 + t32900 - 0.050584*t32936 + 0.054372*t32953 + t33265 + var1[2];
  p_output1[59]=t32962;
  p_output1[60]=t33293;
  p_output1[61]=t13358 + t15345 + t16264 + t17820 + t18375 + t19992 - 0.425628*t20025 + 0.012178*t20123 + t20189 + var1[0];
  p_output1[62]=t13358 + t15345 + t16264 + t17820 + t18375 + t19992 - 0.42591*t20025 + 0.014288*t20123 + t20209 + var1[0];
  p_output1[63]=t13358 + t15345 + t16264 + t17820 + t18375 + t19992 - 0.425985*t20025 + 0.014849*t20123 + t20216 + var1[0];
  p_output1[64]=t13358 + t15345 + t16264 + t17820 + t18375 + t19992 - 0.425845*t20025 + 0.013801*t20123 + t20224 + var1[0];
  p_output1[65]=t13358 + t15345 + t16264 + t17820 + t18375 + t19992 - 0.425505*t20025 + 0.011257*t20123 + t20241 + var1[0];
  p_output1[66]=t13358 + t15345 + t16264 + t17820 + t18375 + t19992 - 0.425002*t20025 + 0.007494*t20123 + t20262 + var1[0];
  p_output1[67]=t13358 + t15345 + t16264 + t17820 + t18375 + t19992 - 0.42439*t20025 + 0.002919*t20123 + t20284 + var1[0];
  p_output1[68]=t13358 + t15345 + t16264 + t17820 + t18375 + t19992 - 0.423736*t20025 - 0.001973*t20123 + t20313 + var1[0];
  p_output1[69]=t13358 + t15345 + t16264 + t17820 + t18375 + t19992 - 0.423111*t20025 - 0.006651*t20123 + t20356 + var1[0];
  p_output1[70]=t13358 + t15345 + t16264 + t17820 + t18375 + t19992 - 0.422582*t20025 - 0.010608*t20123 + t21084 + var1[0];
  p_output1[71]=t13358 + t15345 + t16264 + t17820 + t18375 + t19992 - 0.422206*t20025 - 0.013416*t20123 + t21269 + var1[0];
  p_output1[72]=t13358 + t15345 + t16264 + t17820 + t18375 + t19992 - 0.422025*t20025 - 0.01477*t20123 + t21574 + var1[0];
  p_output1[73]=t13358 + t15345 + t16264 + t17820 + t18375 + t19992 - 0.422058*t20025 - 0.014523*t20123 + t22858 + var1[0];
  p_output1[74]=t13358 + t15345 + t16264 + t17820 + t18375 + t19992 - 0.422302*t20025 - 0.012702*t20123 + t23123 + var1[0];
  p_output1[75]=t13358 + t15345 + t16264 + t17820 + t18375 + t19992 - 0.422729*t20025 - 0.009505*t20123 + t24125 + var1[0];
  p_output1[76]=t13358 + t15345 + t16264 + t17820 + t18375 + t19992 - 0.423294*t20025 - 0.005278*t20123 + t24348 + var1[0];
  p_output1[77]=t13358 + t15345 + t16264 + t17820 + t18375 + t19992 - 0.423936*t20025 - 0.000479*t20123 + t24374 + var1[0];
  p_output1[78]=t13358 + t15345 + t16264 + t17820 + t18375 + t19992 - 0.424584*t20025 + 0.004372*t20123 + t24388 + var1[0];
  p_output1[79]=t33293;
  p_output1[80]=t33478;
  p_output1[81]=t24622 + t24776 + t24996 + t25835 + t25906 + t26064 - 0.425628*t26169 + 0.012178*t26541 + t26641 + var1[1];
  p_output1[82]=t24622 + t24776 + t24996 + t25835 + t25906 + t26064 - 0.42591*t26169 + 0.014288*t26541 + t26672 + var1[1];
  p_output1[83]=t24622 + t24776 + t24996 + t25835 + t25906 + t26064 - 0.425985*t26169 + 0.014849*t26541 + t26842 + var1[1];
  p_output1[84]=t24622 + t24776 + t24996 + t25835 + t25906 + t26064 - 0.425845*t26169 + 0.013801*t26541 + t27576 + var1[1];
  p_output1[85]=t24622 + t24776 + t24996 + t25835 + t25906 + t26064 - 0.425505*t26169 + 0.011257*t26541 + t29639 + var1[1];
  p_output1[86]=t24622 + t24776 + t24996 + t25835 + t25906 + t26064 - 0.425002*t26169 + 0.007494*t26541 + t30927 + var1[1];
  p_output1[87]=t24622 + t24776 + t24996 + t25835 + t25906 + t26064 - 0.42439*t26169 + 0.002919*t26541 + t31197 + var1[1];
  p_output1[88]=t24622 + t24776 + t24996 + t25835 + t25906 + t26064 - 0.423736*t26169 - 0.001973*t26541 + t31565 + var1[1];
  p_output1[89]=t24622 + t24776 + t24996 + t25835 + t25906 + t26064 - 0.423111*t26169 - 0.006651*t26541 + t31595 + var1[1];
  p_output1[90]=t24622 + t24776 + t24996 + t25835 + t25906 + t26064 - 0.422582*t26169 - 0.010608*t26541 + t31649 + var1[1];
  p_output1[91]=t24622 + t24776 + t24996 + t25835 + t25906 + t26064 - 0.422206*t26169 - 0.013416*t26541 + t31682 + var1[1];
  p_output1[92]=t24622 + t24776 + t24996 + t25835 + t25906 + t26064 - 0.422025*t26169 - 0.01477*t26541 + t31952 + var1[1];
  p_output1[93]=t24622 + t24776 + t24996 + t25835 + t25906 + t26064 - 0.422058*t26169 - 0.014523*t26541 + t32094 + var1[1];
  p_output1[94]=t24622 + t24776 + t24996 + t25835 + t25906 + t26064 - 0.422302*t26169 - 0.012702*t26541 + t32151 + var1[1];
  p_output1[95]=t24622 + t24776 + t24996 + t25835 + t25906 + t26064 - 0.422729*t26169 - 0.009505*t26541 + t32461 + var1[1];
  p_output1[96]=t24622 + t24776 + t24996 + t25835 + t25906 + t26064 - 0.423294*t26169 - 0.005278*t26541 + t32490 + var1[1];
  p_output1[97]=t24622 + t24776 + t24996 + t25835 + t25906 + t26064 - 0.423936*t26169 - 0.000479*t26541 + t32527 + var1[1];
  p_output1[98]=t24622 + t24776 + t24996 + t25835 + t25906 + t26064 - 0.424584*t26169 + 0.004372*t26541 + t32636 + var1[1];
  p_output1[99]=t33478;
  p_output1[100]=t33590;
  p_output1[101]=t32666 + t32686 + t32712 + t32733 + t32826 + t32900 - 0.425628*t32936 + 0.012178*t32953 + t32963 + var1[2];
  p_output1[102]=t32666 + t32686 + t32712 + t32733 + t32826 + t32900 - 0.42591*t32936 + 0.014288*t32953 + t32969 + var1[2];
  p_output1[103]=t32666 + t32686 + t32712 + t32733 + t32826 + t32900 - 0.425985*t32936 + 0.014849*t32953 + t32982 + var1[2];
  p_output1[104]=t32666 + t32686 + t32712 + t32733 + t32826 + t32900 - 0.425845*t32936 + 0.013801*t32953 + t32998 + var1[2];
  p_output1[105]=t32666 + t32686 + t32712 + t32733 + t32826 + t32900 - 0.425505*t32936 + 0.011257*t32953 + t33044 + var1[2];
  p_output1[106]=t32666 + t32686 + t32712 + t32733 + t32826 + t32900 - 0.425002*t32936 + 0.007494*t32953 + t33065 + var1[2];
  p_output1[107]=t32666 + t32686 + t32712 + t32733 + t32826 + t32900 - 0.42439*t32936 + 0.002919*t32953 + t33087 + var1[2];
  p_output1[108]=t32666 + t32686 + t32712 + t32733 + t32826 + t32900 - 0.423736*t32936 - 0.001973*t32953 + t33097 + var1[2];
  p_output1[109]=t32666 + t32686 + t32712 + t32733 + t32826 + t32900 - 0.423111*t32936 - 0.006651*t32953 + t33123 + var1[2];
  p_output1[110]=t32666 + t32686 + t32712 + t32733 + t32826 + t32900 - 0.422582*t32936 - 0.010608*t32953 + t33140 + var1[2];
  p_output1[111]=t32666 + t32686 + t32712 + t32733 + t32826 + t32900 - 0.422206*t32936 - 0.013416*t32953 + t33149 + var1[2];
  p_output1[112]=t32666 + t32686 + t32712 + t32733 + t32826 + t32900 - 0.422025*t32936 - 0.01477*t32953 + t33161 + var1[2];
  p_output1[113]=t32666 + t32686 + t32712 + t32733 + t32826 + t32900 - 0.422058*t32936 - 0.014523*t32953 + t33177 + var1[2];
  p_output1[114]=t32666 + t32686 + t32712 + t32733 + t32826 + t32900 - 0.422302*t32936 - 0.012702*t32953 + t33206 + var1[2];
  p_output1[115]=t32666 + t32686 + t32712 + t32733 + t32826 + t32900 - 0.422729*t32936 - 0.009505*t32953 + t33242 + var1[2];
  p_output1[116]=t32666 + t32686 + t32712 + t32733 + t32826 + t32900 - 0.423294*t32936 - 0.005278*t32953 + t33249 + var1[2];
  p_output1[117]=t32666 + t32686 + t32712 + t32733 + t32826 + t32900 - 0.423936*t32936 - 0.000479*t32953 + t33256 + var1[2];
  p_output1[118]=t32666 + t32686 + t32712 + t32733 + t32826 + t32900 - 0.424584*t32936 + 0.004372*t32953 + t33265 + var1[2];
  p_output1[119]=t33590;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 21 && ncols == 1) && 
      !(mrows == 1 && ncols == 21))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 20, (mwSize) 6, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "Link_l_uleg_to_l_leg_kny_bar.hh"

namespace SymFunction
{

void Link_l_uleg_to_l_leg_kny_bar_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
